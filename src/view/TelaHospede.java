/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import view.cadastro.TelaCadastroHospede;
import model.Hospede;
import DAO.HospedeDAO;
import DAO.DAO;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;
import utilidade.Utilidade;

public class TelaHospede extends javax.swing.JFrame {

    private DefaultTableModel modelo = new DefaultTableModel();

    private void limparCampos() {

        lblIdHospede.setText("0");
        txtNomeHospede.setText("");
        txtEmailHospede.setText("");
        txtTelefoneHospede.setText("");
        txtCpfHospede.setText("");
    }

    private void carregaTabela() throws ClassNotFoundException, SQLException {

        tabelaHospedes.setModel(modelo);

        modelo.addColumn("ID");
        modelo.addColumn("Nome");
        modelo.addColumn("CPF");
        modelo.addColumn("Telefone");
        modelo.addColumn("Email");

        tabelaHospedes.getColumnModel().getColumn(0).setMaxWidth(30);
        tabelaHospedes.getColumnModel().getColumn(1).setMinWidth(100);
        tabelaHospedes.getColumnModel().getColumn(2).setPreferredWidth(20);
        tabelaHospedes.getColumnModel().getColumn(3).setPreferredWidth(20);
        tabelaHospedes.getColumnModel().getColumn(4).setMinWidth(40);

        pesquisar(modelo);
    }

    public TelaHospede() {

        super("Hospedes");

        MenuBar menuBar = new MenuBar();
        menuBar.carregaMenuBar(this);

        try {

            initComponents();

            Utilidade u = new Utilidade();

            u.aplicaMascaraCpf(txtCpfPesquisaHospede);
            u.aplicaMascaraCpf(txtCpfHospede);
            u.aplicaMascaraTelefone(txtTelefoneHospede);

            carregaTabela();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TelaHospede.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(TelaHospede.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(TelaHospede.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public static void pesquisar(DefaultTableModel model) {

        try {
            model.setRowCount(0);//Limpa linhas da tabela
            DAO<Hospede> dao = new HospedeDAO();

            for (Hospede h : dao.exibirTodos()) {
                model.addRow(new Object[]{h.getId(), h.getNome(), h.getCpf(), h.getTelefone(), h.getEmail()});
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TelaHospede.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao procurar a classe HOSPEDE: " + ex.getMessage());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaHospedes = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        txtNomeHospede = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtEmailHospede = new javax.swing.JTextField();
        txtCpfHospede = new javax.swing.JFormattedTextField();
        txtTelefoneHospede = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        btnAdicionarHospede = new javax.swing.JButton();
        btnExcluirHospede = new javax.swing.JButton();
        btnAlterarHospede = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        btnLimparCampos = new javax.swing.JButton();
        lblIdHospede = new javax.swing.JLabel();
        lblCPFHospede = new javax.swing.JLabel();
        lblNaoEncontrado = new javax.swing.JLabel();
        txtCpfPesquisaHospede = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabelaHospedes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Cpf", "Telefone", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaHospedes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaHospedesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelaHospedes);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(128, 128, 128)));

        txtNomeHospede.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeHospedeActionPerformed(evt);
            }
        });

        jLabel4.setText("Nome:");

        jLabel1.setText("CPF:");

        jLabel3.setText("Telefone:");

        jLabel2.setText("Email:");

        txtEmailHospede.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailHospedeActionPerformed(evt);
            }
        });

        txtCpfHospede.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCpfHospedeKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(19, 19, 19)
                        .addComponent(txtNomeHospede)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCpfHospede, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTelefoneHospede, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEmailHospede, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNomeHospede, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1)
                    .addComponent(txtCpfHospede, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(txtEmailHospede, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTelefoneHospede, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel6.setText("Dados do HÃ³spede");

        btnAdicionarHospede.setText("Novo Hospede");
        btnAdicionarHospede.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarHospedeActionPerformed(evt);
            }
        });

        btnExcluirHospede.setText("Excluir");
        btnExcluirHospede.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirHospedeActionPerformed(evt);
            }
        });

        btnAlterarHospede.setText("Alterar");
        btnAlterarHospede.setToolTipText("");
        btnAlterarHospede.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarHospedeActionPerformed(evt);
            }
        });

        jLabel5.setText("ID Hospede:");

        btnLimparCampos.setText("Limpar campos");
        btnLimparCampos.setToolTipText("");
        btnLimparCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparCamposActionPerformed(evt);
            }
        });

        lblIdHospede.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblIdHospede.setText("0");
        lblIdHospede.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        lblCPFHospede.setText("CPF Hospede:");
        lblNaoEncontrado.setVisible(false);

        lblNaoEncontrado.setText("CPF Hospede:");
        lblNaoEncontrado.setVisible(false);

        txtCpfPesquisaHospede.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCpfPesquisaHospedeKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCpfPesquisaHospedeKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(lblIdHospede, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnAdicionarHospede, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnExcluirHospede, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnAlterarHospede, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnLimparCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblCPFHospede)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCpfPesquisaHospede, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblNaoEncontrado)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCPFHospede)
                    .addComponent(lblNaoEncontrado)
                    .addComponent(txtCpfPesquisaHospede, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblIdHospede, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdicionarHospede)
                    .addComponent(btnLimparCampos)
                    .addComponent(btnExcluirHospede)
                    .addComponent(btnAlterarHospede))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLimparCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparCamposActionPerformed
        limparCampos();
    }//GEN-LAST:event_btnLimparCamposActionPerformed

    private void btnExcluirHospedeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirHospedeActionPerformed

        if (tabelaHospedes.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Selecione um registro da tabela para continuar!");
            return;
        }

        try {
            DAO<Hospede> dao = new HospedeDAO();
            Hospede hospede = new Hospede();

            hospede.setNome(txtNomeHospede.getText());
            hospede.setCpf(txtCpfHospede.getText());
            hospede.setEmail(txtEmailHospede.getText());
            hospede.setTelefone(txtTelefoneHospede.getText());
            hospede.setId(Integer.parseInt(lblIdHospede.getText()));

            if (dao.excluir(hospede)) {
                JOptionPane.showMessageDialog(this, "Cadastro Excluido!");
            }
            pesquisar(modelo);

        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Erro ao procurar a classe HOSPEDE: " + ex.getMessage());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro ao SQL ao excluir Hospede: " + ex.getMessage());
        }

    }//GEN-LAST:event_btnExcluirHospedeActionPerformed

    private void txtNomeHospedeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeHospedeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeHospedeActionPerformed

    private void tabelaHospedesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaHospedesMouseClicked

        limparCampos();

        try {
            DAO<Hospede> dao = new HospedeDAO();

            int valor = (int) tabelaHospedes.getValueAt(tabelaHospedes.getSelectedRow(), 0);

            Hospede hospede = dao.buscarPorId(valor);

            if (hospede != null) {
                lblIdHospede.setText(String.valueOf(hospede.getId()));
                txtNomeHospede.setText(hospede.getNome());
                txtEmailHospede.setText(hospede.getEmail());
                txtTelefoneHospede.setText(hospede.getTelefone());
                txtCpfHospede.setText(hospede.getCpf());
            } else {
                JOptionPane.showMessageDialog(this, "Hospede com id " + valor + " nÃ£o foi encontrado.");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao buscar hospede: " + e.getMessage());
        }

    }//GEN-LAST:event_tabelaHospedesMouseClicked

    private void txtEmailHospedeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailHospedeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailHospedeActionPerformed

    private void btnAdicionarHospedeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarHospedeActionPerformed
        setVisible(false);
        new TelaCadastroHospede().setVisible(true);
    }//GEN-LAST:event_btnAdicionarHospedeActionPerformed

    private void btnAlterarHospedeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarHospedeActionPerformed

        if (tabelaHospedes.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Selecione um registro da tabela para continuar!");
            return;
        }

        try {
            DAO<Hospede> dao = new HospedeDAO();
            Hospede hospede = new Hospede();

            hospede.setNome(txtNomeHospede.getText());
            hospede.setCpf(txtCpfHospede.getText());
            hospede.setEmail(txtEmailHospede.getText());
            hospede.setTelefone(txtTelefoneHospede.getText());
            hospede.setId(Integer.parseInt(lblIdHospede.getText()));

            if (dao.atualizar(hospede)) {
                JOptionPane.showMessageDialog(this, "ATUALIZADO com sucesso!");
            }

            limparCampos();
            pesquisar(modelo);

        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Erro ao procurar a classe HOSPEDE: " + ex.getMessage());
        } catch (SQLException ex) {
            if (ex.getErrorCode() == 1062) {
                JOptionPane.showMessageDialog(this, "ERRO: NÃ£o Ã© possÃ­vel cadastrar hospedes com cpf's iguais!\n"
                        + ex.getMessage());
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao cadastrar: " + ex.getMessage());
            }

        }

    }//GEN-LAST:event_btnAlterarHospedeActionPerformed

    private void txtCpfHospedeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCpfHospedeKeyTyped
        String caracteres = "0987654321";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCpfHospedeKeyTyped

    private void txtCpfPesquisaHospedeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCpfPesquisaHospedeKeyTyped
        String caracteres = "0987654321";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }

    }//GEN-LAST:event_txtCpfPesquisaHospedeKeyTyped

    private void txtCpfPesquisaHospedeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCpfPesquisaHospedeKeyReleased

        String teste = "";

        for (int i = 0; i <= txtCpfPesquisaHospede.getText().indexOf(' ') - 1; i++) {

            teste += txtCpfPesquisaHospede.getText().charAt(i);
            //System.out.println("numero");

        }

        try {
            HospedeDAO hospedeDao = new HospedeDAO();
            List<Hospede> buscarPorCpfParecido = hospedeDao.buscarPorCpfParecido(teste);
            System.out.println(" ");
            for (Hospede hospede : buscarPorCpfParecido) {
                System.out.println("cpf: " + hospede.getCpf());
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TelaHospede.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(TelaHospede.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtCpfPesquisaHospedeKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaHospede.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaHospede.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaHospede.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaHospede.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaHospede().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarHospede;
    private javax.swing.JButton btnAlterarHospede;
    private javax.swing.JButton btnExcluirHospede;
    private javax.swing.JButton btnLimparCampos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCPFHospede;
    private javax.swing.JLabel lblIdHospede;
    private javax.swing.JLabel lblNaoEncontrado;
    private javax.swing.JTable tabelaHospedes;
    private javax.swing.JFormattedTextField txtCpfHospede;
    private javax.swing.JFormattedTextField txtCpfPesquisaHospede;
    private javax.swing.JTextField txtEmailHospede;
    private javax.swing.JTextField txtNomeHospede;
    private javax.swing.JFormattedTextField txtTelefoneHospede;
    // End of variables declaration//GEN-END:variables
}
